'''
高橋くんは整数を1つ買いに整数屋さんに行きました。
整数屋さんには1以上10**9以下の整数が売られていて、整数Nを買うためには、 A*N + B*d(N)円が必要です。
ここでd(N)とは、Nの十進法表記での桁数。

高橋くんの所持金がX円の時、高橋くんの買うことができるもっとも大きい整数を求めよ。
ただし、買うことのできる整数が1つもない場合は0を出力せよ。

【入力例】
10 7 100 -> A B X
【出力例】
9
-> 10*9 + 7*1 = 97円が最大
'''

A, B, X = map(int, input().split())

left = 0
right = 10**9 + 1

while abs(left-right) > 1:
    mid = (left+right) // 2
    d = len(str(mid))
    price = A*mid + B*d
    if price >= X: right = mid
    else: left = mid

print(left)

'''
リスト形式のものでなくても、単調に増減するものが対象であれば二分探索は使える。
'''