'''
N個のタスクがあります。i個目のタスクはAi日目（今日を1日目とする）、またはそれ以降に実行することができ、消化することでBiポイントが得られる。
あなたは、これから1日ごとに「タスクを1つ選んでそれを消化する」という行為を繰り返す。
1以上N以下の全ての整数kに対して、これからk日間で得られるポイントの合計の最大値を求めよ。
ただし、1以上N以下の全ての整数kに対して、k日目までに実行することのできるタスクがk個以上存在する。

【入力例】
3 → N
1 3 → A1 B1
2 2 → A2 B2
2 4 → A3 B3

【出力例】
3 → 1日目には、3ポイントのみ
7 → 2日目には、1日目に3ポイント、2日目に4ポイントの合計7ポイント
9 → 3日目には、全てのタスクを実行できるので、9ポイント
'''

N = int(input())
# X[d]: d日目から実行可能になるタスクのポイントを集めた配列
for i in range(N):
    X.append([])

for i in range(N):
    a, b = list(map(int, input().split()))
    X[a-1].append(b)

# print(X) → [[3], [2, 4], []]

cnt = [0]*101
ans = 0

for d in range(N):
    for b in X[d]:
        cnt[b] += 1